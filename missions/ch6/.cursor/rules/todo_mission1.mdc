---
description: 
globs: 
alwaysApply: true
---
미션 1.  useQuery를 이용하여 GET 요청하기
해당 미션은 useQuery를 이용하여 LP 데이터를 불러오는 미션입니다! 아래 사진과 같이 /  화면을 구성하고, /v1/lps 에 GET 요청을 보내 데이터를 받아와보세요!
각 LP 카드를 누르면, /lp/:lpid 로 이동하고, 해당 LP 데이터를 받아와 아래 영상과 같이 화면을 보여주시면 됩니다!
- [ ] **header, sidebar, 메인 화면 구현 & useQuery로 데이터 불러오기 (오래된 순/최신순)**
    - `react-query`의 `useQuery`로 `/v1/lps` GET 요청
    - axios 인스턴스(baseURL/timeout) 사용, try-catch 에러 핸들링
    - 응답 타입 interface 정의
    - 정렬 버튼 클릭 시 쿼리 파라미터 변경 or 클라이언트 정렬

- [ ] **LP Card Hover 효과 및 정보 표시**
    - CSS로 hover 시 transform/box-shadow, overlay 적용
    - 카드에 제목, 업로드 날짜, 좋아요 수 표시

- [ ] **비로그인 헤더: 로그인/회원가입 버튼 → 각 페이지 이동**
    - 인증 상태 전역 관리(Redux/Recoil)
    - 로그인/회원가입 버튼 클릭 시 라우팅

- [ ] **로그인 시: 닉네임 기반 환영 문구 헤더에 표시**
    - 인증 상태에서 닉네임 추출, 헤더에 `${닉네임}님 반갑습니다.` 표시

- [ ] **반응형 사이드바: 화면 작아지면 숨김, 버거 버튼/바깥 클릭 동작**
    - CSS 미디어 쿼리, 상태로 사이드바 show/hide
    - 바깥 영역 클릭 시 닫힘 처리

- [ ] **LP 카드 클릭 시 상세 페이지 이동(ProtectedRoute) & 미로그인 시 경고/로그인 이동**
    - `src/routes/ProtectedRoute.tsx`로 상세 페이지 보호
    - 미인증 시 경고 모달, 확인 시 로그인 페이지로 이동

- [ ] **로그인 사용자는 LP 상세 정보 화면 구현(수정/삭제/좋아요 버튼 디자인)**
    - 상세 정보 API 연동, 앨범 이미지/설명/태그/좋아요/작성자 등 표시


    - 수정/삭제/좋아요 버튼은 디자인만 우선 구현